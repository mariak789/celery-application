version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: celery_app
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d celery_app"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    env_file: ../.env
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/celery_app
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: ..
      dockerfile: docker/worker.Dockerfile
    env_file: ../.env
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/celery_app
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  beat:
    build:
      context: ..
      dockerfile: docker/beat.Dockerfile
    env_file: ../.env
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/celery_app
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  flower:
    image: mher/flower:2.0
    environment:
      FLOWER_BROKER: redis://redis:6379/0
      FLOWER_PORT: 5555
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy

volumes:
  pgdata: