x-env-app: &env-app
  DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/celery_app
  REDIS_URL: redis://redis:6379/0
  PYTHONPATH: /app          
  TZ: UTC
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: celery_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: UTC
    volumes:
      - docker_pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d celery_app"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: api.Dockerfile   
    environment:
      <<: *env-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile 
    environment:
      <<: *env-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  beat:
    build:
      context: .
      dockerfile: worker.Dockerfile  # reuse same Dockerfile for beat image
    environment:
      <<: *env-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_started
    command: >
      sh -c "rm -f celerybeat-schedule celerybeat-schedule.db &&
             celery -A app.celery_app.celery_app beat --loglevel=INFO"
    restart: unless-stopped

volumes:
  docker_pgdata: